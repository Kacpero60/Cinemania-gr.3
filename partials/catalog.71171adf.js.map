{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,S,aAAMC,EAAYC,SAASC,cAAc,UACnCC,EAAkBF,SAASC,cAAc,SACzCE,EAAkBH,SAASC,cAAc,iBACzCG,EAAiBJ,SAASC,cAAc,0BACxCI,EAAcL,SAASC,cAAc,mBAIrCK,GAHQN,SAASC,cAAc,U,EAGZM,EAAAV,EAAA,CAAAU,EAAAC,GAAAC,MAAA,SAAAC,I,IAEjBC,EAGEC,EAKAC,EAIEC,EACAC,EAWAC,E,yEAxBJL,EAAM,0EAAiFM,OAD9E,oC,kBAIUC,MAAMP,G,WAAvBC,EAAQO,EAAAC,MACAC,GAAE,C,eACd,MAAM,IAAIC,MAAM,uB,wBAGCV,EAASW,O,SAAtBV,EAAIM,EAAAC,OAEEP,EAAKW,SAAWX,EAAKW,QAAQC,OAAS,GAE1CX,EAAcY,KAAKC,MAAMD,KAAKE,SAAWf,EAAKW,QAAQC,QACtDV,EAAcF,EAAKW,QAAQV,GAGjCf,EAAU8B,YAAcd,EAAYe,OAAS,gBAC7C5B,EAAgB2B,YACdd,EAAYgB,UAAY,2CAE1BC,IAEA5B,EAAe6B,MAAMC,QAAU,QAEzBlB,EAAqB,sCAAgEC,OAA1BF,EAAYoB,eAE7EC,EAAmBpB,IAEnBqB,I,kDAGEC,QAAIC,MAAM,6BAA4BpB,EAAAqB,IAC1CH,I,sGAIED,EAAqB,SAAAK,GACzBpC,EAAY4B,MAAMS,gBAAkB,oFAEnBzB,OAATwB,EAAS,Q,EAKbT,EAAc,WAIlB,IAHA,IACIW,EADiBzC,EAAgB0C,UAG9B1C,EAAgB2C,aAAe3C,EAAgB4C,cACpDH,EAAOA,EAAKI,MAAM,GAAG,GACrB7C,EAAgB0C,UAAYD,EAAO,K,EAKjCN,EAAiB,WACrBtC,EAAU8B,YAAc,6BACxB3B,EAAgB2B,YACd,yMACF3B,EAAgB+B,MAAMe,OAAS,OAC/B7C,EAAgB0B,YAAc,cAC9B1B,EAAgB8C,QAAU,WACxBC,OAAOC,SAASC,KAAO,uB,EAEzBhD,EAAe6B,MAAMC,QAAU,M,EAIjC5B,G","sources":["src/js/hero.js"],"sourcesContent":["const heroTitle = document.querySelector('.title');\nconst heroDescription = document.querySelector('.text');\nconst watchTrailerBtn = document.querySelector('.hero-btn.cta');\nconst moreDetailsBtn = document.querySelector('.hero-btn.more-details');\nconst heroSection = document.querySelector('.hero.container');\nconst intro = document.querySelector('.intro');\n\n// Funkcja pobierająca dane z API i losująca film\nconst fetchRandomMovie = async () => {\n  const apiKey = '9daf636d1e8920119d3143cdf70a7f03';\n  const url = `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('response was not ok');\n    }\n\n    const data = await response.json();\n\n    if (data && data.results && data.results.length > 0) {\n      // Losujemy film z dostępnych wyników\n      const randomIndex = Math.floor(Math.random() * data.results.length);\n      const randomMovie = data.results[randomIndex];\n\n      // Aktualizujemy tytuł, opis i obrazek w hero\n      heroTitle.textContent = randomMovie.title || 'Unknown Title';\n      heroDescription.textContent =\n        randomMovie.overview || 'No description available for this movie.';\n\n      addEllipsis();\n\n      moreDetailsBtn.style.display = 'block';\n\n      const backgroundImageUrl = `https://image.tmdb.org/t/p/original${randomMovie.backdrop_path}`;\n\n      setBackgroundImage(backgroundImageUrl);\n    } else {\n      setDefaultHero(); // Jeśli brak wyników, ustawiamy domyślny wygląd\n    }\n  } catch (error) {\n    console.error('Error fetching movie data:', error);\n    setDefaultHero(); // Jeśli wystąpił błąd, ustawiamy domyślny wygląd\n  }\n};\n\nconst setBackgroundImage = imageUrl => {\n  heroSection.style.backgroundImage = `\n    linear-gradient(83deg, #111 36.85%, rgba(17, 17, 17, 0) 60.05%), \n    url(${imageUrl})\n  `;\n};\n\n//Funckja dodająca trzykropek w opisie w przypadku dłuższego tekstu\nconst addEllipsis = () => {\n  const originalText = heroDescription.innerText;\n  let text = originalText;\n\n  while (heroDescription.scrollHeight > heroDescription.clientHeight) {\n    text = text.slice(0, -1);\n    heroDescription.innerText = text + '...';\n  }\n};\n\n// Funkcja ustawiająca domyślny wygląd sekcji hero\nconst setDefaultHero = () => {\n  heroTitle.textContent = \"Let's Make Your Own Cinema\";\n  heroDescription.textContent =\n    \"Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.\";\n  heroDescription.style.height = 'auto';\n  watchTrailerBtn.textContent = 'Get started';\n  watchTrailerBtn.onclick = () => {\n    window.location.href = 'partials/catalog.html';\n  };\n  moreDetailsBtn.style.display = 'none';\n};\n\n// Wywołanie funkcji pobierającej dane\nfetchRandomMovie();\n"],"names":["$bpxeT","parcelRequire","$c519d076f6352209$var$heroTitle","document","querySelector","$c519d076f6352209$var$heroDescription","$c519d076f6352209$var$watchTrailerBtn","$c519d076f6352209$var$moreDetailsBtn","$c519d076f6352209$var$heroSection","$c519d076f6352209$var$fetchRandomMovie","$parcel$interopDefault","$2TvXO","mark","_callee","url","response","data","randomIndex","randomMovie","backgroundImageUrl","concat","fetch","_ctx","sent","ok","Error","json","results","length","Math","floor","random","textContent","title","overview","$c519d076f6352209$var$addEllipsis","style","display","backdrop_path","$c519d076f6352209$var$setBackgroundImage","$c519d076f6352209$var$setDefaultHero","console","error","t0","imageUrl","backgroundImage","text","innerText","scrollHeight","clientHeight","slice","height","onclick","window","location","href"],"version":3,"file":"catalog.71171adf.js.map"}