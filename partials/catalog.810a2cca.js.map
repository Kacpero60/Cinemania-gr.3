{"mappings":"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","sources":["src/js/catalog.js","src/js/pop-up-movie.js"],"sourcesContent":["import { openPopUp, fetchGenres } from './pop-up-movie.js'; // Importuj funkcje z pop-up.js\n\nconst apikey = '26ee83a5e26d7fcb87f8d8380af6bd82';\nconst gallery = document.querySelector('.gallery');\nlet currentPage = 1;\nlet totalPages = 24;\nlet keyWord = '';\nlet selectedCountry = '';\nlet selectedYear = '';\nlet genresMap = {};\n\n// Funkcja do wyboru krajów\nasync function selector() {\n  const countrySelect = document.getElementById('countrySelect');\n\n  try {\n    const response = await fetch(`https://restcountries.com/v3.1/all`);\n    const countries = await response.json();\n\n    for (let i = 0; i < countries.length; i++) {\n      const country = countries[i];\n      const option = document.createElement('option');\n      option.value = country.cca2;\n      option.textContent = country.name.common;\n      countrySelect.appendChild(option);\n    }\n  } catch (error) {\n    console.error('Błąd podczas pobierania krajów:', error);\n  }\n}\n\n// Funkcja do wyboru lat\nasync function populateYears() {\n  const yearSelect = document.getElementById('yearSelect');\n  const currentYear = new Date().getFullYear();\n\n  for (let year = currentYear; year >= 1980; year--) {\n    const option = document.createElement('option');\n    option.value = year;\n    option.textContent = year;\n    yearSelect.appendChild(option);\n  }\n}\n\n// Renderowanie przycisków paginacji\nasync function renderBtn() {\n  const paginationBtn = document.getElementById('pagination');\n  paginationBtn.innerHTML = '';\n\n  // przycisk do cofania\n  if (currentPage >= 1) {\n    const prevBtn = document.createElement('button');\n    prevBtn.textContent = '<';\n    prevBtn.classList.add('prevnext-btn');\n\n    prevBtn.addEventListener('click', () => {\n      currentPage--;\n      keyWord ? searchMovies(keyWord, currentPage) : popularMovies(currentPage);\n      renderBtn();\n    });\n    paginationBtn.appendChild(prevBtn);\n  }\n\n  // wyświetlanie pierwszych trzech stron\n  for (let i = 1; i <= Math.min(3, totalPages); i++) {\n    const btn = document.createElement('button');\n    btn.textContent = i;\n    btn.classList.add('pagination-btn');\n\n    if (i === currentPage) {\n      btn.classList.add('active');\n    }\n\n    btn.addEventListener('click', () => {\n      currentPage = i;\n      keyWord ? searchMovies(keyWord, currentPage) : popularMovies(currentPage);\n      renderBtn();\n    });\n    paginationBtn.appendChild(btn);\n  }\n\n  // kropki, jeśli jest więcej niż 3 strony\n  if (totalPages > 3) {\n    const dots = document.createElement('div');\n    dots.textContent = '...';\n    dots.classList.add('dots');\n    paginationBtn.appendChild(dots);\n\n    // wyświetlenie ostatniej strony\n    const lastBtn = document.createElement('button');\n    lastBtn.textContent = totalPages;\n    lastBtn.classList.add('pagination-btn');\n    lastBtn.addEventListener('click', () => {\n      currentPage = totalPages;\n      keyWord ? searchMovies(keyWord, currentPage) : popularMovies(currentPage);\n      renderBtn();\n    });\n    paginationBtn.appendChild(lastBtn);\n  }\n\n  // przycisk do następnej strony\n  if (currentPage < totalPages) {\n    const nextBtn = document.createElement('button');\n    nextBtn.textContent = '>';\n    nextBtn.classList.add('prevnext-btn');\n    nextBtn.addEventListener('click', () => {\n      currentPage++;\n      keyWord ? searchMovies(keyWord, currentPage) : popularMovies(currentPage);\n      renderBtn();\n    });\n    paginationBtn.appendChild(nextBtn);\n  }\n}\n\n// pobieranie popularnych filmów\nasync function popularMovies(page = 1) {\n  const regionParams = selectedCountry ? `&region=${selectedCountry}` : '';\n  const yearParams = selectedYear\n    ? `&primary_release_year=${selectedYear}`\n    : '';\n  const apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${apikey}&language=en-US&include_adult=false&page=${page}${regionParams}${yearParams}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    if (!response.ok) {\n      throw new Error('response was not ok');\n    }\n    const data = await response.json();\n    totalPages = data.total_pages;\n    gallery.innerHTML = '';\n\n    if (data.results.length > 0) {\n      data.results.forEach(movie => {\n        const movieEl = document.createElement('div');\n        movieEl.className = 'movie';\n\n        const imgEl = document.createElement('img');\n        imgEl.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n        const titleEl = document.createElement('p');\n        titleEl.textContent = movie.title;\n        titleEl.className = 'movie-title';\n\n        const genresEl = document.createElement('p');\n        const genres = movie.genre_ids\n          .map(id => genresMap[id])\n          .filter(name => name)\n          .join(', ');\n        const year = movie.release_date.split('-')[0];\n        genresEl.textContent = `${genres} | ${year}`;\n        genresEl.className = 'movie-genres-year';\n\n        movieEl.appendChild(imgEl);\n        movieEl.appendChild(titleEl);\n        movieEl.appendChild(genresEl);\n        gallery.appendChild(movieEl);\n\n        movieEl.addEventListener('click', () => {\n          openPopUp(movie, apikey);\n        });\n      });\n    } else {\n      gallery.textContent = 'OOPS... Brak wyników pasujących do wyszukiwania.';\n    }\n\n    renderBtn();\n  } catch (error) {\n    console.error('Błąd podczas pobierania filmów:', error);\n  }\n}\n\n// wyszukiwanie filmów\nasync function searchMovies(keyWord, page = 1) {\n  const yearParams = selectedYear\n    ? `&primary_release_year=${selectedYear}`\n    : '';\n  const regionParams = selectedCountry ? `&region=${selectedCountry}` : '';\n  const apiURL = `https://api.themoviedb.org/3/search/movie?query=${keyWord}&api_key=${apikey}&language=en-US&include_adult=false&page=${page}${regionParams}${yearParams}`;\n\n  try {\n    const response = await fetch(apiURL);\n    if (!response.ok) {\n      throw new Error('response was not ok');\n    }\n    const data = await response.json();\n    totalPages = data.total_pages;\n    gallery.innerHTML = '';\n\n    if (data.results.length > 0) {\n      data.results.forEach(movie => {\n        const movieEl = document.createElement('div');\n        movieEl.className = 'movie';\n\n        // Pobieranie obrazów dla danego filmu\n        fetch(\n          `https://api.themoviedb.org/3/movie/${movie.id}/images?api_key=${apikey}`\n        )\n          .then(response => response.json())\n          .then(imageData => {\n            if (imageData.posters.length > 0) {\n              const imgEl = document.createElement('img');\n              imgEl.src = `https://image.tmdb.org/t/p/w500${imageData.posters[0].file_path}`;\n              movieEl.appendChild(imgEl);\n            }\n\n            // Tytuł filmu\n            const titleEl = document.createElement('p');\n            titleEl.textContent = movie.title;\n            titleEl.className = 'movie-title';\n\n            const genresEl = document.createElement('p');\n            const genres = movie.genre_ids\n              .map(id => genresMap[id])\n              .filter(name => name)\n              .join(', ');\n            const year = movie.release_date.split('-')[0];\n            genresEl.textContent = `${genres} | ${year}`;\n            genresEl.className = 'movie-genres-year';\n\n            movieEl.appendChild(titleEl);\n            movieEl.appendChild(genresEl);\n            gallery.appendChild(movieEl);\n            movieEl.addEventListener('click', () => {\n              openPopUp(movie, apikey);\n            });\n          });\n      });\n    } else {\n      gallery.textContent = 'OOPS... Brak wyników pasujących do wyszukiwania.';\n    }\n\n    renderBtn();\n  } catch (error) {\n    console.error('Błąd podczas wyszukiwania filmów:', error);\n  }\n}\n\n// Gatunki filmów\nasync function fetchGenre() {\n  const urlGenre = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apikey}`;\n\n  try {\n    const response = await fetch(urlGenre);\n    if (!response.ok) {\n      throw new Error('response was not ok');\n    }\n    const data = await response.json();\n\n    genresMap = {};\n    data.genres.forEach(genre => {\n      genresMap[genre.id] = genre.name;\n    });\n  } catch (error) {\n    console.error('error:', error);\n  }\n}\n\n// Inicjalizacja\nasync function init() {\n  await fetchGenre();\n  await popularMovies(); // Wyświetl popularne filmy od razu\n}\n\n// Inicjalizacja przycisku wyszukiwania\ndocument.getElementById('searchButton').addEventListener('click', async () => {\n  keyWord = document.getElementById('searchInput').value;\n  currentPage = 1; // Resetuj stronę na 1 przy nowym wyszukiwaniu\n  await searchMovies(keyWord, currentPage);\n});\n\n// Inicjalizacja krajów i lat\nselector();\npopulateYears();\ninit();","// Funkcja do otwierania pop-upu\nexport async function openPopUp(movie, apikey) {\n    const popUpContainer = document.getElementById('popUpContainer');\n    const popUpImage = document.getElementById('popUpImage');\n    const popUpDescription = document.getElementById('popUpDescription');\n  \n    // Clear previous content\n    popUpImage.innerHTML = ''; // Clear any existing image\n    popUpDescription.innerHTML = ''; // Clear any existing description\n  \n    // Create an img element for the movie poster\n    const imgEl = document.createElement('img');\n    imgEl.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  \n    // Append the image to the pop-up image div\n    popUpImage.appendChild(imgEl);\n  \n    // Fetch genres and map them\n    const genreMap = await fetchGenres(apikey);\n    const genreNames = movie.genre_ids\n      .map(id => genreMap[id])\n      .filter(name => name); // Map IDs to names\n  \n    popUpDescription.innerHTML = `\n            <h2>${movie.title}</h2>\n            <p class=\"pop-up-description-data vote\" >Vote / Votes: <span> ${\n              movie.vote_average\n            } / ${movie.vote_count}</span></p>\n            <p class=\"pop-up-description-data popularity\">Popularity: <span>${\n              movie.popularity\n            }</span></p>\n            <p class=\"pop-up-description-data gendre\">Genre: <span>${\n              genreNames.length > 0 ? genreNames.join(', ') : ''\n            }</span></p>\n            <p class=\"pop-up-description-data about\"> ABOUT:</p>\n            <p class=\"pop-up-description-data about-desc\"> ${movie.overview}</p>\n            <button class=\"buttonAddToMyLibrary\" id=\"buttonAddToMyLibrary\">Add to my</button>\n        `;\n  \n    // Show the pop-up\n    popUpContainer.style.display = 'flex';\n  \n    // Close pop-up event\n    document.getElementById('closePopUp').onclick = function () {\n      popUpContainer.style.display = 'none';\n    };\n  \n    // Obsługa kliknięcia przycisku 'Add to my'\n    document\n      .getElementById('buttonAddToMyLibrary')\n      .addEventListener('click', function () {\n        addToLibrary(movie.id); // Dodaj ID filmu do biblioteki\n        alert(`${movie.title} został dodany do Twojej biblioteki!`);\n      });\n  }\n  \n  // Funkcja do pobierania gatunków\n  export async function fetchGenres(apikey) {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/genre/movie/list?api_key=${apikey}&language=en-US&`\n      );\n      const data = await response.json();\n  \n      // Tworzenie mapy ID gatunków do nazw\n      const genreMap = {};\n      data.genres.forEach(genre => {\n        genreMap[genre.id] = genre.name;\n      });\n  \n      return genreMap;\n    } catch (error) {\n      console.error('Błąd podczas pobierania gatunków:', error);\n      return {};\n    }\n  }\n  \n  // Funkcja dodająca film do localStorage\n  function addToLibrary(movieId) {\n    let library = JSON.parse(localStorage.getItem('library')) || [];\n    // Sprawdzenie, czy film już jest w bibliotece\n    if (!library.includes(movieId)) {\n      library.push(movieId);\n      localStorage.setItem('library', JSON.stringify(library));\n    }\n  }"],"names":["$bpxeT","parcelRequire","$c24d5c3b10b9375f$export$873fe25bfa110c5b","movie","apikey","$c24d5c3b10b9375f$var$_openPopUp","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","popUpContainer","popUpImage","popUpDescription","imgEl","genreMap","genreNames","document","getElementById","innerHTML","createElement","src","concat","poster_path","appendChild","$c24d5c3b10b9375f$export$e95d448b93b2cdb","_ctx","sent","genre_ids","map","id","filter","name","title","vote_average","vote_count","popularity","length","join","overview","style","display","onclick","addEventListener","$c24d5c3b10b9375f$var$addToLibrary","alert","$c24d5c3b10b9375f$var$_fetchGenres","response","data","fetch","json","genres","forEach","genre","console","error","t0","movieId","library","JSON","parse","localStorage","getItem","includes","push","setItem","stringify","$01039996e00cb7ba$var$apikey","$01039996e00cb7ba$var$gallery","querySelector","$01039996e00cb7ba$var$currentPage","$01039996e00cb7ba$var$totalPages","$01039996e00cb7ba$var$keyWord","$01039996e00cb7ba$var$genresMap","$01039996e00cb7ba$var$_selector","countrySelect","countries","i","country","option","value","cca2","textContent","common","$01039996e00cb7ba$var$_populateYears","yearSelect","currentYear","year","Date","getFullYear","$01039996e00cb7ba$var$renderBtn","$01039996e00cb7ba$var$_renderBtn","paginationBtn","prevBtn","btn","dots","lastBtn","nextBtn","classList","add","$01039996e00cb7ba$var$searchMovies","$01039996e00cb7ba$var$popularMovies","Math","min","$01039996e00cb7ba$var$_popularMovies","page","regionParams","yearParams","apiUrl","_args","ok","Error","total_pages","results","movieEl","className","titleEl","genresEl","release_date","split","keyWord1","$01039996e00cb7ba$var$_searchMovies","apiURL","response1","then","imageData","posters","file_path","$01039996e00cb7ba$var$fetchGenre","$01039996e00cb7ba$var$_fetchGenre","urlGenre","$01039996e00cb7ba$var$_init","$01039996e00cb7ba$var$selector","$01039996e00cb7ba$var$populateYears","$01039996e00cb7ba$var$init"],"version":3,"file":"catalog.810a2cca.js.map"}