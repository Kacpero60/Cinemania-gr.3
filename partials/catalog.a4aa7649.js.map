{"mappings":"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","sources":["src/js/pop-up-movie.js","src/js/catalog.js"],"sourcesContent":["// Funkcja do otwierania pop-upu\nexport async function openPopUp(movie, apikey) {\n    const popUpContainer = document.getElementById('popUpContainer');\n    const popUpImage = document.getElementById('popUpImage');\n    const popUpDescription = document.getElementById('popUpDescription');\n  \n    // Clear previous content\n    popUpImage.innerHTML = ''; // Clear any existing image\n    popUpDescription.innerHTML = ''; // Clear any existing description\n  \n    // Create an img element for the movie poster\n    const imgEl = document.createElement('img');\n    imgEl.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  \n    // Append the image to the pop-up image div\n    popUpImage.appendChild(imgEl);\n  \n    // Fetch genres and map them\n    const genreMap = await fetchGenres(apikey);\n    const genreNames = movie.genre_ids\n      .map(id => genreMap[id])\n      .filter(name => name); // Map IDs to names\n  \n    popUpDescription.innerHTML = `\n            <h2>${movie.title}</h2>\n            <p class=\"pop-up-description-data vote\" >Vote / Votes: <span> ${\n              movie.vote_average\n            } / ${movie.vote_count}</span></p>\n            <p class=\"pop-up-description-data popularity\">Popularity: <span>${\n              movie.popularity\n            }</span></p>\n            <p class=\"pop-up-description-data gendre\">Genre: <span>${\n              genreNames.length > 0 ? genreNames.join(', ') : ''\n            }</span></p>\n            <p class=\"pop-up-description-data about\"> ABOUT:</p>\n            <p class=\"pop-up-description-data about-desc\"> ${movie.overview}</p>\n            <button class=\"buttonAddToMyLibrary\" id=\"buttonAddToMyLibrary\">Add to my</button>\n        `;\n  \n    // Show the pop-up\n    popUpContainer.style.display = 'flex';\n  \n    // Close pop-up event\n    document.getElementById('closePopUp').onclick = function () {\n      popUpContainer.style.display = 'none';\n    };\n  \n    // Obsługa kliknięcia przycisku 'Add to my'\n    document\n      .getElementById('buttonAddToMyLibrary')\n      .addEventListener('click', function () {\n        addToLibrary(movie.id); // Dodaj ID filmu do biblioteki\n        alert(`${movie.title} został dodany do Twojej biblioteki!`);\n      });\n  }\n  \n  // Funkcja do pobierania gatunków\n  export async function fetchGenres(apikey) {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/genre/movie/list?api_key=${apikey}&language=en-US&`\n      );\n      const data = await response.json();\n  \n      // Tworzenie mapy ID gatunków do nazw\n      const genreMap = {};\n      data.genres.forEach(genre => {\n        genreMap[genre.id] = genre.name;\n      });\n  \n      return genreMap;\n    } catch (error) {\n      console.error('Błąd podczas pobierania gatunków:', error);\n      return {};\n    }\n  }\n  \n  // Funkcja dodająca film do localStorage\n  function addToLibrary(movieId) {\n    let library = JSON.parse(localStorage.getItem('library')) || [];\n    // Sprawdzenie, czy film już jest w bibliotece\n    if (!library.includes(movieId)) {\n      library.push(movieId);\n      localStorage.setItem('library', JSON.stringify(library));\n    }\n  }","import { openPopUp, fetchGenres } from './pop-up-movie.js'; // Importuj funkcje z pop-up.js\n\nconst apikey = '26ee83a5e26d7fcb87f8d8380af6bd82';\nconst gallery = document.querySelector('.gallery');\nlet currentPage = 1;\nlet totalPages = 24;\nlet keyWord = '';\nlet selectedCountry = '';\nlet selectedYear = '';\nlet genresMap = {};\n\n// Funkcja do wyboru krajów\nasync function selector() {\n  const countrySelect = document.getElementById('countrySelect');\n\n  try {\n    const response = await fetch(`https://restcountries.com/v3.1/all`);\n    const countries = await response.json();\n\n    for (let i = 0; i < countries.length; i++) {\n      const country = countries[i];\n      const option = document.createElement('option');\n      option.value = country.cca2;\n      option.textContent = country.name.common;\n      countrySelect.appendChild(option);\n    }\n  } catch (error) {\n    console.error('Błąd podczas pobierania krajów:', error);\n  }\n}\n\n// Funkcja do wyboru lat\nasync function populateYears() {\n  const yearSelect = document.getElementById('yearSelect');\n  const currentYear = new Date().getFullYear();\n\n  for (let year = currentYear; year >= 1980; year--) {\n    const option = document.createElement('option');\n    option.value = year;\n    option.textContent = year;\n    yearSelect.appendChild(option);\n  }\n}\n\n// Renderowanie przycisków paginacji\nasync function renderBtn() {\n  const paginationBtn = document.getElementById('pagination');\n  paginationBtn.innerHTML = '';\n\n  // przycisk do cofania\n  if (currentPage >= 1) {\n    const prevBtn = document.createElement('button');\n    prevBtn.textContent = '<';\n    prevBtn.classList.add('prevnext-btn');\n\n    prevBtn.addEventListener('click', () => {\n      currentPage--;\n      keyWord ? searchMovies(keyWord, currentPage) : popularMovies(currentPage);\n      renderBtn();\n    });\n    paginationBtn.appendChild(prevBtn);\n  }\n\n  // wyświetlanie pierwszych trzech stron\n  for (let i = 1; i <= Math.min(3, totalPages); i++) {\n    const btn = document.createElement('button');\n    btn.textContent = i;\n    btn.classList.add('pagination-btn');\n\n    if (i === currentPage) {\n      btn.classList.add('active');\n    }\n\n    btn.addEventListener('click', () => {\n      currentPage = i;\n      keyWord ? searchMovies(keyWord, currentPage) : popularMovies(currentPage);\n      renderBtn();\n    });\n    paginationBtn.appendChild(btn);\n  }\n\n  // kropki, jeśli jest więcej niż 3 strony\n  if (totalPages > 3) {\n    const dots = document.createElement('div');\n    dots.textContent = '...';\n    dots.classList.add('dots');\n    paginationBtn.appendChild(dots);\n\n    // wyświetlenie ostatniej strony\n    const lastBtn = document.createElement('button');\n    lastBtn.textContent = totalPages;\n    lastBtn.classList.add('pagination-btn');\n    lastBtn.addEventListener('click', () => {\n      currentPage = totalPages;\n      keyWord ? searchMovies(keyWord, currentPage) : popularMovies(currentPage);\n      renderBtn();\n    });\n    paginationBtn.appendChild(lastBtn);\n  }\n\n  // przycisk do następnej strony\n  if (currentPage < totalPages) {\n    const nextBtn = document.createElement('button');\n    nextBtn.textContent = '>';\n    nextBtn.classList.add('prevnext-btn');\n    nextBtn.addEventListener('click', () => {\n      currentPage++;\n      keyWord ? searchMovies(keyWord, currentPage) : popularMovies(currentPage);\n      renderBtn();\n    });\n    paginationBtn.appendChild(nextBtn);\n  }\n}\n\n// pobieranie popularnych filmów\nasync function popularMovies(page = 1) {\n  const regionParams = selectedCountry ? `&region=${selectedCountry}` : '';\n  const yearParams = selectedYear\n    ? `&primary_release_year=${selectedYear}`\n    : '';\n  const apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${apikey}&language=en-US&include_adult=false&page=${page}${regionParams}${yearParams}`;\n\n  try {\n    const response = await fetch(apiUrl);\n    if (!response.ok) {\n      throw new Error('response was not ok');\n    }\n    const data = await response.json();\n    totalPages = data.total_pages;\n    gallery.innerHTML = '';\n\n    if (data.results.length > 0) {\n      data.results.forEach(movie => {\n        const movieEl = document.createElement('div');\n        movieEl.className = 'movie';\n\n        const imgEl = document.createElement('img');\n        imgEl.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n        const titleEl = document.createElement('p');\n        titleEl.textContent = movie.title;\n        titleEl.className = 'movie-title';\n\n        const genresEl = document.createElement('p');\n        const genres = movie.genre_ids\n          .map(id => genresMap[id])\n          .filter(name => name)\n          .join(', ');\n        const year = movie.release_date.split('-')[0];\n        genresEl.textContent = `${genres} | ${year}`;\n        genresEl.className = 'movie-genres-year';\n\n        movieEl.appendChild(imgEl);\n        movieEl.appendChild(titleEl);\n        movieEl.appendChild(genresEl);\n        gallery.appendChild(movieEl);\n\n        movieEl.addEventListener('click', () => {\n          openPopUp(movie, apikey);\n        });\n      });\n    } else {\n      gallery.textContent = 'OOPS... Brak wyników pasujących do wyszukiwania.';\n    }\n\n    renderBtn();\n  } catch (error) {\n    console.error('Błąd podczas pobierania filmów:', error);\n  }\n}\n\n// wyszukiwanie filmów\nasync function searchMovies(keyWord, page = 1) {\n  const yearParams = selectedYear\n    ? `&primary_release_year=${selectedYear}`\n    : '';\n  const regionParams = selectedCountry ? `&region=${selectedCountry}` : '';\n  const apiURL = `https://api.themoviedb.org/3/search/movie?query=${keyWord}&api_key=${apikey}&language=en-US&include_adult=false&page=${page}${regionParams}${yearParams}`;\n\n  try {\n    const response = await fetch(apiURL);\n    if (!response.ok) {\n      throw new Error('response was not ok');\n    }\n    const data = await response.json();\n    totalPages = data.total_pages;\n    gallery.innerHTML = '';\n\n    if (data.results.length > 0) {\n      data.results.forEach(movie => {\n        const movieEl = document.createElement('div');\n        movieEl.className = 'movie';\n\n        // Pobieranie obrazów dla danego filmu\n        fetch(\n          `https://api.themoviedb.org/3/movie/${movie.id}/images?api_key=${apikey}`\n        )\n          .then(response => response.json())\n          .then(imageData => {\n            if (imageData.posters.length > 0) {\n              const imgEl = document.createElement('img');\n              imgEl.src = `https://image.tmdb.org/t/p/w500${imageData.posters[0].file_path}`;\n              movieEl.appendChild(imgEl);\n            }\n\n            // Tytuł filmu\n            const titleEl = document.createElement('p');\n            titleEl.textContent = movie.title;\n            titleEl.className = 'movie-title';\n\n            const genresEl = document.createElement('p');\n            const genres = movie.genre_ids\n              .map(id => genresMap[id])\n              .filter(name => name)\n              .join(', ');\n            const year = movie.release_date.split('-')[0];\n            genresEl.textContent = `${genres} | ${year}`;\n            genresEl.className = 'movie-genres-year';\n\n            movieEl.appendChild(titleEl);\n            movieEl.appendChild(genresEl);\n            gallery.appendChild(movieEl);\n            movieEl.addEventListener('click', () => {\n              openPopUp(movie, apikey);\n            });\n          });\n      });\n    } else {\n      gallery.textContent = 'OOPS... Brak wyników pasujących do wyszukiwania.';\n    }\n\n    renderBtn();\n  } catch (error) {\n    console.error('Błąd podczas wyszukiwania filmów:', error);\n  }\n}\n\n// Gatunki filmów\nasync function fetchGenre() {\n  const urlGenre = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apikey}`;\n\n  try {\n    const response = await fetch(urlGenre);\n    if (!response.ok) {\n      throw new Error('response was not ok');\n    }\n    const data = await response.json();\n\n    genresMap = {};\n    data.genres.forEach(genre => {\n      genresMap[genre.id] = genre.name;\n    });\n  } catch (error) {\n    console.error('error:', error);\n  }\n}\n\n// Inicjalizacja\nasync function init() {\n  await fetchGenre();\n  await popularMovies(); // Wyświetl popularne filmy od razu\n}\n\n// Inicjalizacja przycisku wyszukiwania\ndocument.getElementById('searchButton').addEventListener('click', async () => {\n  keyWord = document.getElementById('searchInput').value;\n  currentPage = 1; // Resetuj stronę na 1 przy nowym wyszukiwaniu\n  await searchMovies(keyWord, currentPage);\n});\n\n// Inicjalizacja krajów i lat\nselector();\npopulateYears();\ninit();"],"names":["async","$8fe7e0a8c2d3fdf2$export$873fe25bfa110c5b","movie","apikey","popUpContainer","document","getElementById","popUpImage","popUpDescription","innerHTML","imgEl","createElement","src","poster_path","appendChild","genreMap","response","fetch","data","json","genres","forEach","genre","id","name","error","console","$8fe7e0a8c2d3fdf2$export$e95d448b93b2cdb","genreNames","genre_ids","map","filter","title","vote_average","vote_count","popularity","length","join","overview","style","display","onclick","addEventListener","movieId","library","JSON","parse","localStorage","getItem","includes","push","setItem","stringify","$8fe7e0a8c2d3fdf2$var$addToLibrary","alert","$9f350005b1f9b186$var$gallery","querySelector","$9f350005b1f9b186$var$currentPage","$9f350005b1f9b186$var$totalPages","$9f350005b1f9b186$var$keyWord","$9f350005b1f9b186$var$genresMap","$9f350005b1f9b186$var$renderBtn","paginationBtn","prevBtn","textContent","classList","add","$9f350005b1f9b186$var$searchMovies","$9f350005b1f9b186$var$popularMovies","i","Math","min","btn","dots","lastBtn","nextBtn","page","apiUrl","ok","Error","total_pages","results","movieEl","className","titleEl","genresEl","year","release_date","split","keyWord1","apiURL","response1","then","imageData","posters","file_path","value","countrySelect","countries","country","option","cca2","common","$9f350005b1f9b186$var$selector","yearSelect","Date","getFullYear","$9f350005b1f9b186$var$populateYears","$9f350005b1f9b186$var$fetchGenre","$9f350005b1f9b186$var$init"],"version":3,"file":"catalog.a4aa7649.js.map"}