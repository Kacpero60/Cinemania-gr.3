{"mappings":"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","sources":["src/js/mylibrary.js"],"sourcesContent":["       // Funkcja do pobierania gatunków filmów z TMDB\n       async function fetchGenres() {\n        const apiKey = '26ee83a5e26d7fcb87f8d8380af6bd82' ; // Podaj swój klucz API\n        const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n        \n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Error fetching genres from TMDB');\n            }\n            const data = await response.json();\n\n            const genreSelect = document.getElementById('genreSelect');\n\n            // Dodanie opcji do selecta\n            data.genres.forEach(genre => {\n                const option = document.createElement('option');\n                option.value = genre.id; \n                option.textContent = genre.name; \n                genreSelect.appendChild(option);\n            });\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n    // Funkcja do wyświetlania filmów z localStorage\n    function displayMovies() {\n        const galleryLibrary = document.querySelector('.gallery-library');\n        const message = document.querySelector('.message');\n        const loadMoreBtn = document.getElementById('loadMoreBtn');\n\n        // Pobieranie filmów z localStorage\n        const movies = JSON.parse(localStorage.getItem('myLibrary')) || [];\n\n        // Sprawdzenie, czy są filmy w bibliotece\n        if (movies.length === 0) {\n            message.style.display = 'block'; \n            loadMoreBtn.style.display = 'none'; \n            galleryLibrary.innerHTML = ''; \n            return;\n        } else {\n            message.style.display = 'none'; \n            loadMoreBtn.style.display = 'block'; \n        }\n\n        // Wyświetlanie filmów\n        galleryLibrary.innerHTML = ''; \n        movies.forEach(movie => {\n            const movieEl = document.createElement('div');\n            movieEl.className = 'movie-item'; \n\n            const imgEl = document.createElement('img');\n            imgEl.src = movie.posterPath; \n            imgEl.alt = movie.title; \n\n            const titleEl = document.createElement('p');\n            titleEl.textContent = movie.title; \n\n            movieEl.appendChild(imgEl);\n            movieEl.appendChild(titleEl);\n            galleryLibrary.appendChild(movieEl);\n        });\n    }\n\n    // Wywołanie funkcji podczas ładowania strony\n    document.addEventListener('DOMContentLoaded', async () => {\n        await fetchGenres(); \n        displayMovies(); \n    });\n    // Funkcja do wyświetlania filmów w zakładce 'My Library'\nfunction displayLibrary() {\n    const library = JSON.parse(localStorage.getItem('library')) || [];\n    const gallery = document.querySelector('.gallery-library');\n    const message = document.querySelector('.message');\n\n    if (library.length === 0) {\n        message.style.display = 'block';\n        gallery.innerHTML = '';  // Wyczyść galerię\n    } else {\n        message.style.display = 'none';\n        gallery.innerHTML = '';  // Wyczyść galerię na wypadek ponownego załadowania\n        library.forEach(movie => {\n            const movieElement = document.createElement('div');\n            movieElement.classList.add('movie-item');\n            movieElement.innerHTML = `\n                <h3>${movie.title}</h3>\n                <p>Genre: ${movie.genre}</p>\n                <button class=\"show-details-btn\">Show Details</button>\n            `;\n            gallery.appendChild(movieElement);\n\n            // Dodaj pop-up do każdego filmu\n            movieElement.querySelector('.show-details-btn').addEventListener('click', () => {\n                openPopUp(movie);\n            });\n        });\n    }\n}\n\n// Funkcja otwierająca pop-up\nfunction openPopUp(movie) {\n    const popUp = document.createElement('div');\n    popUp.classList.add('popup');\n    popUp.innerHTML = `\n        <div class=\"popup-content\">\n            <h2>${movie.title}</h2>\n            <p><strong>Genre:</strong> ${movie.genre}</p>\n            <p><strong>Description:</strong> ${movie.description || 'No description available'}</p>\n            <button class=\"close-popup-btn\">Close</button>\n        </div>\n    `;\n\n    document.body.appendChild(popUp);\n\n    // Funkcja zamykająca pop-up\n    popUp.querySelector('.close-popup-btn').addEventListener('click', () => {\n        popUp.remove();\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', displayLibrary);\n// Funkcja do wyświetlania filmów z biblioteki\nasync function displayLibraryMovies() {\n    let library = JSON.parse(localStorage.getItem('library')) || [];\n  \n    // Sprawdzenie, czy w bibliotece są jakieś filmy\n    const messageEl = document.querySelector('.message');\n    const loadMoreBtn = document.getElementById('loadMoreBtn');\n    \n    if (library.length === 0) {\n      messageEl.style.display = 'block'; // Wyświetl komunikat, jeśli brak filmów\n      loadMoreBtn.style.display = 'none'; // Ukryj przycisk \"Load More\"\n      return;\n    }\n  \n    // Ukryj komunikat o braku filmów\n    messageEl.style.display = 'none';\n    loadMoreBtn.style.display = 'block';\n  \n    // Tworzymy kontener na filmy\n    const libraryContainer = document.querySelector('.gallery-library');\n    libraryContainer.innerHTML = ''; // Czyszczenie poprzedniej zawartości\n  \n    // Pobieramy szczegóły dla każdego filmu z localStorage\n    for (let movieId of library) {\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${apikey}`);\n        if (!response.ok) {\n          throw new Error('Błąd podczas pobierania danych filmu');\n        }\n        const movie = await response.json();\n  \n        // Tworzenie elementów HTML dla każdego filmu\n        const movieEl = document.createElement('div');\n        movieEl.className = 'movie';\n  \n        const imgEl = document.createElement('img');\n        imgEl.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  \n        const titleEl = document.createElement('p');\n        titleEl.textContent = movie.title;\n        titleEl.className = 'movie-title';\n  \n        const genresEl = document.createElement('p');\n        const genres = movie.genres.map(genre => genre.name).join(', ');\n        const year = movie.release_date.split('-')[0];\n        genresEl.textContent = `${genres} | ${year}`;\n        genresEl.className = 'movie-genres-year';\n  \n        movieEl.appendChild(imgEl);\n        movieEl.appendChild(titleEl);\n        movieEl.appendChild(genresEl);\n        libraryContainer.appendChild(movieEl);\n      } catch (error) {\n        console.error('Błąd podczas pobierania filmów z biblioteki:', error);\n      }\n    }\n  }\n  \n  // Wywołaj funkcję podczas ładowania strony\n  document.addEventListener('DOMContentLoaded', displayLibraryMovies);\n  "],"names":["document","addEventListener","async","response","fetch","ok","Error","data","json","genreSelect","getElementById","genres","forEach","genre","option","createElement","value","id","textContent","name","appendChild","error","console","$ad8c01af5b9c46e5$var$fetchGenres","galleryLibrary","querySelector","message","loadMoreBtn","movies","JSON","parse","localStorage","getItem","length","style","display","innerHTML","movie","movieEl","className","imgEl","src","posterPath","alt","title","titleEl","$ad8c01af5b9c46e5$var$displayMovies","library","gallery","movieElement","classList","add","popUp","description","body","remove","$ad8c01af5b9c46e5$var$openPopUp","messageEl","libraryContainer","movieId","apikey","poster_path","genresEl","map","join","year","release_date","split"],"version":3,"file":"library.9114cd66.js.map"}