{"mappings":"AAAA,MAAMA,EAAYC,SAASC,cAAc,UACnCC,EAAkBF,SAASC,cAAc,SACzCE,EAAkBH,SAASC,cAAc,iBACzCG,EAAiBJ,SAASC,cAAc,0BACxCI,EAAcL,SAASC,cAAc,mBA+DrCK,GA9DQN,SAASC,cAAc,UA8DVM,IACzBF,EAAYG,MAAMC,gBAAkB,oFAE5BF,QACP,GAIGG,EAAc,KAElB,IAAIC,EADiBT,EAAgBU,UAGrC,KAAOV,EAAgBW,aAAeX,EAAgBY,cACpDH,EAAOA,EAAKI,MAAM,GAAG,GACrBb,EAAgBU,UAAYD,EAAO,K,EAKjCK,EAAiB,KACrBjB,EAAUkB,YAAc,6BACxBf,EAAgBe,YACd,yMACFf,EAAgBM,MAAMU,OAAS,OAC/Bf,EAAgBc,YAAc,cAC9Bd,EAAgBgB,QAAU,KACxBC,OAAOC,SAASC,KAAO,uBAAuB,EAEhDlB,EAAeI,MAAMe,QAAU,MAAM,EAIjCC,EAAmBC,IACvB,MAAMC,EAAe1B,SAASC,cAAc,iBACtC0B,EAAe3B,SAAS4B,eAAe,gBAEzCH,GACFE,EAAaE,IAAMJ,EACnBE,EAAanB,MAAMe,QAAU,UAE7BI,EAAanB,MAAMe,QAAU,OAGxBvB,SAASC,cAAc,yBAC1BD,SAASC,cAAc,0BAA0B6B,WAAa,6QAQlEJ,EAAalB,MAAMe,QAAU,MAAM,EAI/BQ,EAAoB,KACxB,MAAML,EAAe1B,SAASC,cAAc,iBACvBD,SAAS4B,eAAe,gBAEhCC,IAAM,GACdH,EAAQlB,MAAMe,QAAU,OAG3B,MAAIS,EAAmBhC,SAASC,cAAc,uBAC5C+B,GACFA,EAAiBC,QAAQ,EAK3BjC,SAAOC,cAAc,UAAUiC,iBAAiB,QAASH,GAC3DX,OAAOc,iBAAiB,SAASC,IAC/B,MAAMT,EAAe1B,SAASC,cAAc,iBACxCkC,EAAMC,SAAWV,GACnBK,GAAmB,IAtIEM,WACvB,MAAMC,EAAS,mCACTC,EAAM,0EAA0ED,IAEtF,IACE,MAAME,QAAiBC,MAAMF,GAC7B,IAAKC,EAASE,GACZ,MAAM,IAAIC,MAAM,uBAGlB,MAAMC,QAAaJ,EAASK,OAE5B,GAAID,GAAQA,EAAKE,SAAWF,EAAKE,QAAQC,OAAS,EAAG,CAEjD,MAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWP,EAAKE,QAAQC,QACtDK,EAAcR,EAAKE,QAAQE,GAGhCjD,EAASkB,YAAcmC,EAAYC,OAAS,gBAC7CnD,EAAgBe,YACdmC,EAAYE,UAAY,2CAE1B5C,IAEAN,EAAeI,MAAMe,QAAU,QAE/B,MAAMgC,EAAqB,sCAAsCH,EAAYI,gBAE7ElD,EAAmBiD,GAGnB,MAAM9B,EAAa,sCAAsC2B,EAAYK,qBAAqBnB,mBACpFoB,QAAwBjB,MAAMhB,GAC9BkC,QAAoBD,EAAgBb,OAE1C,GAAIc,EAAYb,QAAQC,OAAS,EAAG,CAClC,MAAMa,EAAUD,EAAYb,QAAQe,MAClCC,GAAwB,YAAfA,EAAMC,OAEjB,GAAIH,EAAS,CACX,MAAMI,EAAa,iCAAiCJ,EAAQK,MAC5D9D,EAAgBgB,QAAU,IAAMK,EAAiBwC,E,MAGjD7D,EAAgBgB,QAAU,IAAMK,EAAiB,K,MAInDrB,EAAgBgB,QAAU,IAAMK,EAAiB,K,MAGnDR,G,CAEF,MAAOkD,GACPC,QAAQD,MAAM,6BAA8BA,GAC5ClD,G,GAmFJoD","sources":["src/js/hero.js"],"sourcesContent":["const heroTitle = document.querySelector('.title');\nconst heroDescription = document.querySelector('.text');\nconst watchTrailerBtn = document.querySelector('.hero-btn.cta');\nconst moreDetailsBtn = document.querySelector('.hero-btn.more-details');\nconst heroSection = document.querySelector('.hero.container');\nconst intro = document.querySelector('.intro');\n\n// Funkcja pobierająca dane z API i losująca film\nconst fetchRandomMovie = async () => {\n  const apiKey = '9daf636d1e8920119d3143cdf70a7f03';\n  const url = `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('response was not ok');\n    }\n\n    const data = await response.json();\n\n    if (data && data.results && data.results.length > 0) {\n      // Losujemy film z dostępnych wyników\n      const randomIndex = Math.floor(Math.random() * data.results.length);\n      const randomMovie = data.results[randomIndex];\n\n      // Aktualizujemy tytuł, opis i obrazek w hero\n      heroTitle.textContent = randomMovie.title || 'Unknown Title';\n      heroDescription.textContent =\n        randomMovie.overview || 'No description available for this movie.';\n\n      addEllipsis();\n\n      moreDetailsBtn.style.display = 'block';\n\n      const backgroundImageUrl = `https://image.tmdb.org/t/p/original${randomMovie.backdrop_path}`;\n\n      setBackgroundImage(backgroundImageUrl);\n\n      //Dodawanie trailera:\n      const trailerUrl = `https://api.themoviedb.org/3/movie/${randomMovie.id}/videos?api_key=${apiKey}&language=en-US`;\n      const trailerResponse = await fetch(trailerUrl);\n      const trailerData = await trailerResponse.json();\n\n      if (trailerData.results.length > 0) {\n        const trailer = trailerData.results.find(\n          video => video.type === 'Trailer'\n        );\n        if (trailer) {\n          const youtubeUrl = `https://www.youtube.com/embed/${trailer.key}`;\n          watchTrailerBtn.onclick = () => openTrailerModal(youtubeUrl);\n        } else {\n          // Brak zwiastuna\n          watchTrailerBtn.onclick = () => openTrailerModal(null);\n        }\n      } else {\n        // Brak zwiastuna\n        watchTrailerBtn.onclick = () => openTrailerModal(null);\n      }\n    } else {\n      setDefaultHero(); // Jeśli brak wyników, ustawiamy domyślny wygląd\n    }\n  } catch (error) {\n    console.error('Error fetching movie data:', error);\n    setDefaultHero(); // Jeśli wystąpił błąd, ustawiamy domyślny wygląd\n  }\n};\n\nconst setBackgroundImage = imageUrl => {\n  heroSection.style.backgroundImage = `\n    linear-gradient(83deg, #111 36.85%, rgba(17, 17, 17, 0) 60.05%), \n    url(${imageUrl})\n  `;\n};\n\n//Funckja dodająca trzykropek w opisie w przypadku dłuższego tekstu\nconst addEllipsis = () => {\n  const originalText = heroDescription.innerText;\n  let text = originalText;\n\n  while (heroDescription.scrollHeight > heroDescription.clientHeight) {\n    text = text.slice(0, -1);\n    heroDescription.innerText = text + '...';\n  }\n};\n\n// Funkcja ustawiająca domyślny wygląd sekcji hero\nconst setDefaultHero = () => {\n  heroTitle.textContent = \"Let's Make Your Own Cinema\";\n  heroDescription.textContent =\n    \"Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.\";\n  heroDescription.style.height = 'auto';\n  watchTrailerBtn.textContent = 'Get started';\n  watchTrailerBtn.onclick = () => {\n    window.location.href = 'partials/catalog.html';\n  };\n  moreDetailsBtn.style.display = 'none';\n};\n\n// Funckcja otwierajaca modal z trailerem\nconst openTrailerModal = trailerUrl => {\n  const trailerModal = document.querySelector('.trailerModal');\n  const trailerFrame = document.getElementById('trailerFrame');\n\n  if (trailerUrl) {\n    trailerFrame.src = trailerUrl;\n    trailerFrame.style.display = 'block'; // Pokaż wideo\n  } else {\n    trailerFrame.style.display = 'none'; // Ukryj wideo\n\n    // Dodaj komunikat o braku zwiastuna, jeśli nie istnieje\n    if (!document.querySelector('.no-trailer-content')) {\n      document.querySelector('.trailer-modal-content').innerHTML += `\n        <div class=\"no-trailer-content\">\n          <p class=\"no-trailer\">OOPS... We are very sorry, but we couldn't find the trailer!</p>\n          <img src=\"../images/NoTrailer.png\" alt=\"No trailer available\" class=\"no-trailer-img\" />\n        </div>\n      `;\n    }\n  }\n  trailerModal.style.display = 'flex';\n};\n\n// Zamykanie modala z trailerem\nconst closeTrailerModal = () => {\n  const trailerModal = document.querySelector('.trailerModal');\n  const trailerFrame = document.getElementById('trailerFrame');\n\n  trailerFrame.src = ''; // Czyści źródło wideo po zamknięciu modala\n  trailerModal.style.display = 'none';\n\n  // Usuwamy komunikat o braku zwiastuna i obrazek (jeśli istnieją)\n  const noTrailerContent = document.querySelector('.no-trailer-content');\n  if (noTrailerContent) {\n    noTrailerContent.remove();\n  }\n};\n\n// Obsługa zamykania modala po kliknięciu \"x\" lub poza modalem\ndocument.querySelector('.close').addEventListener('click', closeTrailerModal);\nwindow.addEventListener('click', event => {\n  const trailerModal = document.querySelector('.trailerModal');\n  if (event.target === trailerModal) {\n    closeTrailerModal();\n  }\n});\n// Wywołanie funkcji pobierającej dane\nfetchRandomMovie();\n"],"names":["$aab6d1c60b3e9a0a$var$heroTitle","document","querySelector","$aab6d1c60b3e9a0a$var$heroDescription","$aab6d1c60b3e9a0a$var$watchTrailerBtn","$aab6d1c60b3e9a0a$var$moreDetailsBtn","$aab6d1c60b3e9a0a$var$heroSection","$aab6d1c60b3e9a0a$var$setBackgroundImage","imageUrl","style","backgroundImage","$aab6d1c60b3e9a0a$var$addEllipsis","text","innerText","scrollHeight","clientHeight","slice","$aab6d1c60b3e9a0a$var$setDefaultHero","textContent","height","onclick","window","location","href","display","$aab6d1c60b3e9a0a$var$openTrailerModal","trailerUrl","trailerModal","trailerFrame","getElementById","src","innerHTML","$aab6d1c60b3e9a0a$var$closeTrailerModal","noTrailerContent","remove","addEventListener","event","target","async","apiKey","url","response","fetch","ok","Error","data","json","results","length","randomIndex","Math","floor","random","randomMovie","title","overview","backgroundImageUrl","backdrop_path","id","trailerResponse","trailerData","trailer","find","video","type","youtubeUrl","key","error","console","$aab6d1c60b3e9a0a$var$fetchRandomMovie"],"version":3,"file":"catalog.d6ab1232.js.map"}