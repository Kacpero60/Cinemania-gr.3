{"mappings":"iiBACO,IAAAA,EAAAC,EAAA,S,sBAAeC,I,OAAAC,EAAWC,MAAAC,KAAAC,U,UAAXH,I,OAAAA,EAAfI,EAAAP,EAAA,CAAAO,EAAAC,GAAAC,MAAA,SAAAC,I,IAEOC,EAGIC,EAIAC,EAEAC,E,wEAVK,mCACTH,EAAM,yDAAgEI,OAD7D,mCAC6D,mB,kBAGjDC,MAAML,G,WAAvBC,EAAQK,EAAAC,MACAC,GAAE,C,eACZ,MAAM,IAAIC,MAAM,mC,wBAEDR,EAASS,O,QAAtBR,EAAII,EAAAC,KAEJJ,EAAcQ,SAASC,eAAe,eAG5CV,EAAKW,OAAOC,SAAQ,SAAAC,GAChB,IAAMC,EAASL,SAASM,cAAc,UACtCD,EAAOE,MAAQH,EAAMI,GACrBH,EAAOI,YAAcL,EAAMM,KAC3BlB,EAAYmB,YAAYN,E,sDAG5BO,QAAQC,MAAM,SAAQlB,EAAAmB,I,2DArBDhC,MAAAC,KAAAC,U,CA0B3B,SAAO+B,IACL,IAAMC,EAAiBhB,SAASiB,cAAc,oBACxCC,EAAUlB,SAASiB,cAAc,YACjCE,EAAcnB,SAASC,eAAe,eAGtCmB,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GAG/D,GAAqB,IAAlBJ,EAAOK,OAIP,OAHAP,EAAQQ,MAAMC,QAAU,QACxBR,EAAYO,MAAMC,QAAU,YAC5BX,EAAeY,UAAY,IAG3BV,EAAQQ,MAAMC,QAAU,OACxBR,EAAYO,MAAMC,QAAU,QAI9BX,EAAaY,UAAY,GAC3BR,EAAOjB,SAAQ,SAAA0B,GACX,IAAMC,EAAU9B,SAASM,cAAc,OACvCwB,EAAQC,UAAY,aAEpB,IAAMC,EAAQhC,SAASM,cAAc,OACrC0B,EAAMC,IAAMJ,EAAMK,WAClBF,EAAMG,IAAMN,EAAMO,MAElB,IAAMC,EAAUrC,SAASM,cAAc,KACvC+B,EAAQ5B,YAAcoB,EAAMO,MAE5BN,EAAQnB,YAAYqB,GACpBF,EAAQnB,YAAY0B,GACpBrB,EAAeL,YAAYmB,E,IAKjC9B,SAAOsC,iBAAiB,mBAAoBrD,EAAAP,EAAA,CAAAO,EAAAC,GAAAC,MAAA,SAAAC,I,kFACpCR,I,OACNmC,I,4CAqDRf,SAASsC,iBAAiB,oBAlDvB,WACC,IAAMC,EAAUlB,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,GACzDgB,EAAUxC,SAASiB,cAAc,oBACjCC,EAAUlB,SAASiB,cAAc,YAEhB,IAAnBsB,EAAQd,QACRP,EAAQQ,MAAMC,QAAU,QACxBa,EAAQZ,UAAY,KAEpBV,EAAQQ,MAAMC,QAAU,OACxBa,EAAQZ,UAAY,GAChBW,EAAIpC,SAAQ,SAAA0B,GACZ,IAAMY,EAAezC,SAASM,cAAc,OAC5CmC,EAAaC,UAAUC,IAAI,cAC3BF,EAAab,UAAY,yBAETnC,OADNoC,EAAMO,MAAM,qCACM3C,OAAZoC,EAAMzB,MAAM,8FAG5BoC,EAAQ7B,YAAY8B,GAGnBA,EAAYxB,cAAc,qBAAqBqB,iBAAiB,SAAS,YAQrF,SAAkBT,GACf,IAAMe,EAAQ5C,SAASM,cAAc,OACrCsC,EAAMF,UAAUC,IAAI,SACpBC,EAAMhB,UAAY,0DAGmBnC,OADvBoC,EAAMO,MAAM,kDAEiB3C,OADNoC,EAAMzB,MAAM,uDAC0CX,OAAhDoC,EAAMgB,aAAe,2BAA2B,0FAK3F7C,SAAS8C,KAAKnC,YAAYiC,GAG1BA,EAAM3B,cAAc,oBAAoBqB,iBAAiB,SAAS,WAC9DM,EAAMG,Q,IAvBEC,CAAUnB,E","sources":["src/js/mylibrary.js"],"sourcesContent":["       // Funkcja do pobierania gatunków filmów z TMDB\n       async function fetchGenres() {\n        const apiKey = '26ee83a5e26d7fcb87f8d8380af6bd82' ; // Podaj swój klucz API\n        const url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apiKey}&language=en-US`;\n        \n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Error fetching genres from TMDB');\n            }\n            const data = await response.json();\n\n            const genreSelect = document.getElementById('genreSelect');\n\n            // Dodanie opcji do selecta\n            data.genres.forEach(genre => {\n                const option = document.createElement('option');\n                option.value = genre.id; \n                option.textContent = genre.name; \n                genreSelect.appendChild(option);\n            });\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n    // Funkcja do wyświetlania filmów z localStorage\n    function displayMovies() {\n        const galleryLibrary = document.querySelector('.gallery-library');\n        const message = document.querySelector('.message');\n        const loadMoreBtn = document.getElementById('loadMoreBtn');\n\n        // Pobieranie filmów z localStorage\n        const movies = JSON.parse(localStorage.getItem('myLibrary')) || [];\n\n        // Sprawdzenie, czy są filmy w bibliotece\n        if (movies.length === 0) {\n            message.style.display = 'block'; \n            loadMoreBtn.style.display = 'none'; \n            galleryLibrary.innerHTML = ''; \n            return;\n        } else {\n            message.style.display = 'none'; \n            loadMoreBtn.style.display = 'block'; \n        }\n\n        // Wyświetlanie filmów\n        galleryLibrary.innerHTML = ''; \n        movies.forEach(movie => {\n            const movieEl = document.createElement('div');\n            movieEl.className = 'movie-item'; \n\n            const imgEl = document.createElement('img');\n            imgEl.src = movie.posterPath; \n            imgEl.alt = movie.title; \n\n            const titleEl = document.createElement('p');\n            titleEl.textContent = movie.title; \n\n            movieEl.appendChild(imgEl);\n            movieEl.appendChild(titleEl);\n            galleryLibrary.appendChild(movieEl);\n        });\n    }\n\n    // Wywołanie funkcji podczas ładowania strony\n    document.addEventListener('DOMContentLoaded', async () => {\n        await fetchGenres(); \n        displayMovies(); \n    });\n    // Funkcja do wyświetlania filmów w zakładce 'My Library'\nfunction displayLibrary() {\n    const library = JSON.parse(localStorage.getItem('library')) || [];\n    const gallery = document.querySelector('.gallery-library');\n    const message = document.querySelector('.message');\n\n    if (library.length === 0) {\n        message.style.display = 'block';\n        gallery.innerHTML = '';  // Wyczyść galerię\n    } else {\n        message.style.display = 'none';\n        gallery.innerHTML = '';  // Wyczyść galerię na wypadek ponownego załadowania\n        library.forEach(movie => {\n            const movieElement = document.createElement('div');\n            movieElement.classList.add('movie-item');\n            movieElement.innerHTML = `\n                <h3>${movie.title}</h3>\n                <p>Genre: ${movie.genre}</p>\n                <button class=\"show-details-btn\">Show Details</button>\n            `;\n            gallery.appendChild(movieElement);\n\n            // Dodaj pop-up do każdego filmu\n            movieElement.querySelector('.show-details-btn').addEventListener('click', () => {\n                openPopUp(movie);\n            });\n        });\n    }\n}\n\n// Funkcja otwierająca pop-up\nfunction openPopUp(movie) {\n    const popUp = document.createElement('div');\n    popUp.classList.add('popup');\n    popUp.innerHTML = `\n        <div class=\"popup-content\">\n            <h2>${movie.title}</h2>\n            <p><strong>Genre:</strong> ${movie.genre}</p>\n            <p><strong>Description:</strong> ${movie.description || 'No description available'}</p>\n            <button class=\"close-popup-btn\">Close</button>\n        </div>\n    `;\n\n    document.body.appendChild(popUp);\n\n    // Funkcja zamykająca pop-up\n    popUp.querySelector('.close-popup-btn').addEventListener('click', () => {\n        popUp.remove();\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', displayLibrary);\n"],"names":["$bpxeT","parcelRequire","$ab5c4f364fa41332$var$fetchGenres","$ab5c4f364fa41332$var$_fetchGenres","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","url","response","data","genreSelect","concat","fetch","_ctx","sent","ok","Error","json","document","getElementById","genres","forEach","genre","option","createElement","value","id","textContent","name","appendChild","console","error","t0","$ab5c4f364fa41332$var$displayMovies","galleryLibrary","querySelector","message","loadMoreBtn","movies","JSON","parse","localStorage","getItem","length","style","display","innerHTML","movie","movieEl","className","imgEl","src","posterPath","alt","title","titleEl","addEventListener","library","gallery","movieElement","classList","add","popUp","description","body","remove","$ab5c4f364fa41332$var$openPopUp"],"version":3,"file":"library.d084a091.js.map"}