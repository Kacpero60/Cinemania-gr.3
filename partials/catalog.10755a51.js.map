{"mappings":"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","sources":["src/js/hero.js"],"sourcesContent":["const heroTitle = document.querySelector('.title');\nconst heroDescription = document.querySelector('.text');\nconst watchTrailerBtn = document.querySelector('.hero-btn.cta');\nconst moreDetailsBtn = document.querySelector('.hero-btn.more-details');\nconst heroSection = document.querySelector('.hero.container');\nconst intro = document.querySelector('.intro');\n\n// Funkcja pobierająca dane z API i losująca film\nconst fetchRandomMovie = async () => {\n  const apiKey = '9daf636d1e8920119d3143cdf70a7f03';\n  const url = `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('response was not ok');\n    }\n\n    const data = await response.json();\n\n    if (data && data.results && data.results.length > 0) {\n      // Losujemy film z dostępnych wyników\n      const randomIndex = Math.floor(Math.random() * data.results.length);\n      const randomMovie = data.results[randomIndex];\n\n      // Aktualizujemy tytuł, opis i obrazek w hero\n      heroTitle.textContent = randomMovie.title || 'Unknown Title';\n      heroDescription.textContent =\n        randomMovie.overview || 'No description available for this movie.';\n\n      addEllipsis();\n\n      moreDetailsBtn.style.display = 'block';\n\n      const backgroundImageUrl = `https://image.tmdb.org/t/p/original${randomMovie.backdrop_path}`;\n\n      setBackgroundImage(backgroundImageUrl);\n\n      //Dodawanie trailera:\n      const trailerUrl = `https://api.themoviedb.org/3/movie/${randomMovie.id}/videos?api_key=${apiKey}&language=en-US`;\n      const trailerResponse = await fetch(trailerUrl);\n      const trailerData = await trailerResponse.json();\n\n      if (trailerData.results.length > 0) {\n        const trailer = trailerData.results.find(\n          video => video.type === 'Trailer'\n        );\n        if (trailer) {\n          const youtubeUrl = `https://www.youtube.com/embed/${trailer.key}`;\n          watchTrailerBtn.onclick = () => openTrailerModal(youtubeUrl);\n        } else {\n          // Brak zwiastuna\n          watchTrailerBtn.onclick = () => openTrailerModal(null);\n        }\n      } else {\n        // Brak zwiastuna\n        watchTrailerBtn.onclick = () => openTrailerModal(null);\n      }\n    } else {\n      setDefaultHero(); // Jeśli brak wyników, ustawiamy domyślny wygląd\n    }\n  } catch (error) {\n    console.error('Error fetching movie data:', error);\n    setDefaultHero(); // Jeśli wystąpił błąd, ustawiamy domyślny wygląd\n  }\n};\n\nconst setBackgroundImage = imageUrl => {\n  heroSection.style.backgroundImage = `\n    linear-gradient(83deg, #111 36.85%, rgba(17, 17, 17, 0) 60.05%), \n    url(${imageUrl})\n  `;\n};\n\n//Funckja dodająca trzykropek w opisie w przypadku dłuższego tekstu\nconst addEllipsis = () => {\n  const originalText = heroDescription.innerText;\n  let text = originalText;\n\n  while (heroDescription.scrollHeight > heroDescription.clientHeight) {\n    text = text.slice(0, -1);\n    heroDescription.innerText = text + '...';\n  }\n};\n\n// Funkcja ustawiająca domyślny wygląd sekcji hero\nconst setDefaultHero = () => {\n  heroTitle.textContent = \"Let's Make Your Own Cinema\";\n  heroDescription.textContent =\n    \"Is a guide to creating a personalized movie theater experience. You'll need a projector, screen, and speakers. Decorate your space, choose your films, and stock up on snacks for the full experience.\";\n  heroDescription.style.height = 'auto';\n  watchTrailerBtn.textContent = 'Get started';\n  watchTrailerBtn.onclick = () => {\n    window.location.href = 'partials/catalog.html';\n  };\n  moreDetailsBtn.style.display = 'none';\n};\n\n// Funckcja otwierajaca modal z trailerem\nconst openTrailerModal = trailerUrl => {\n  const trailerModal = document.querySelector('.trailerModal');\n  const trailerFrame = document.getElementById('trailerFrame');\n\n  if (trailerUrl) {\n    trailerFrame.src = trailerUrl;\n    trailerFrame.style.display = 'block'; // Pokaż wideo\n  } else {\n    trailerFrame.style.display = 'none'; // Ukryj wideo\n\n    // Dodaj komunikat o braku zwiastuna, jeśli nie istnieje\n    if (!document.querySelector('.no-trailer-content')) {\n      document.querySelector('.trailer-modal-content').innerHTML += `\n        <div class=\"no-trailer-content\">\n          <p class=\"no-trailer\">OOPS... We are very sorry, but we couldn't find the trailer!</p>\n          <img src=\"../images/NoTrailer.png\" alt=\"No trailer available\" class=\"no-trailer-img\" />\n        </div>\n      `;\n    }\n  }\n  trailerModal.style.display = 'flex';\n};\n\n// Zamykanie modala z trailerem\nconst closeTrailerModal = () => {\n  const trailerModal = document.querySelector('.trailerModal');\n  const trailerFrame = document.getElementById('trailerFrame');\n\n  trailerFrame.src = ''; // Czyści źródło wideo po zamknięciu modala\n  trailerModal.style.display = 'none';\n\n  // Usuwamy komunikat o braku zwiastuna i obrazek (jeśli istnieją)\n  const noTrailerContent = document.querySelector('.no-trailer-content');\n  if (noTrailerContent) {\n    noTrailerContent.remove();\n  }\n};\n\n// Obsługa zamykania modala po kliknięciu \"x\" lub poza modalem\ndocument.querySelector('.close').addEventListener('click', closeTrailerModal);\nwindow.addEventListener('click', event => {\n  const trailerModal = document.querySelector('.trailerModal');\n  if (event.target === trailerModal) {\n    closeTrailerModal();\n  }\n});\n// Wywołanie funkcji pobierającej dane\nfetchRandomMovie();\n"],"names":["$bpxeT","parcelRequire","$c519d076f6352209$var$heroTitle","document","querySelector","$c519d076f6352209$var$heroDescription","$c519d076f6352209$var$watchTrailerBtn","$c519d076f6352209$var$moreDetailsBtn","$c519d076f6352209$var$heroSection","$c519d076f6352209$var$fetchRandomMovie","$parcel$interopDefault","$2TvXO","mark","_callee","apiKey","url","response","data","randomIndex","randomMovie","backgroundImageUrl","trailerUrl","trailerResponse","trailerData","trailer","youtubeUrl","concat","fetch","_ctx","sent","ok","Error","json","results","length","Math","floor","random","textContent","title","overview","$c519d076f6352209$var$addEllipsis","style","display","backdrop_path","$c519d076f6352209$var$setBackgroundImage","id","find","video","type","key","onclick","$c519d076f6352209$var$openTrailerModal","$c519d076f6352209$var$setDefaultHero","console","error","t0","imageUrl","backgroundImage","text","innerText","scrollHeight","clientHeight","slice","height","window","location","href","trailerModal","trailerFrame","getElementById","src","innerHTML","$c519d076f6352209$var$closeTrailerModal","noTrailerContent","remove","addEventListener","event","target"],"version":3,"file":"catalog.10755a51.js.map"}