{"mappings":"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","sources":["src/js/catalog.js"],"sourcesContent":["const apikey = '26ee83a5e26d7fcb87f8d8380af6bd82';\nconst gallery = document.querySelector(\".gallery\");\nlet currentPage = 1;\nlet totalPages = 24;\nconst perPage = 20;\nlet keyWord = '';\nlet selectedCountry = '';\nlet selectedYear = '';\n\n//funkcja, co daje kraje do wyboru\nasync function selector() {\n    const countrySelect = document.getElementById('countrySelect');\n\n    try {\n        const response = await fetch(`https://restcountries.com/v3.1/all`);\n        const countries = await response.json();\n\n        for (let i = 0; i < countries.length; i++) { \n            const country = countries[i];\n            const option = document.createElement('option');\n            option.value = country.cca2;\n            option.textContent = country.name.common;\n            countrySelect.appendChild(option);\n        }\n    } catch(error) {\n        console.error('error fetching countries');\n    }\n}\n\n//funkcja co daje lata do wyboru\nasync function populateYears() {\n    const yearSelect = document.getElementById('yearSelect');\n    const currentYear = new Date().getFullYear(); \n\n\n    for (let year = currentYear; year >= 1980; year--) {\n        const option = document.createElement('option');\n        option.value = year;\n        option.textContent = year;\n        yearSelect.appendChild(option);\n    }\n}\n\n//renderowanie przycisków\nasync function renderBtn() {\n    const paginationBtn = document.getElementById('pagination');\n    paginationBtn.innerHTML = '';\n\n   //przycisk do cofania '<'\n   if (currentPage >= 1) {\n        const prevBtn = document.createElement('button');\n        prevBtn.textContent = '<';\n\n        prevBtn.addEventListener('click', () => {\n            currentPage--;\n\n            if (keyWord) {\n                searchMovies(keyWord, currentPage)\n            } else {\n                popularMovies(currentPage);\n            }\n            renderBtn();\n        });\n        paginationBtn.appendChild(prevBtn);\n   }\n\n   //wyświetlenie pierwszych trzech stron\n   for (let i = 1; i <= Math.min(3, totalPages); i++) {\n        const btn = document.createElement('button');\n        btn.textContent = i;\n\n        btn.addEventListener('click', () => {\n            currentPage = i;\n\n            if (keyWord) {\n                searchMovies(keyWord, currentPage);\n            } else {\n                popularMovies(currentPage);\n            }\n            renderBtn();\n        });\n        paginationBtn.appendChild(btn);\n   }\n\n   \n   //kropki, gdy jest wiecej niz 3 strony\n   if (totalPages > 3) {\n       const dots =document.createElement('div');\n       dots.textContent = '...';\n       paginationBtn.appendChild(dots);\n       \n       //wyswietlenie 24 strony\n       const lastBtn = document.createElement('button');\n       lastBtn.textContent = 24;\n       \n       lastBtn.addEventListener('click', () => {\n           currentPage = 24;\n           \n           if (keyWord) {\n               searchMovies(keyWord, currentPage);\n            } else {\n                popularMovies(currentPage);\n            }\n            renderBtn();\n        });\n        paginationBtn.appendChild(lastBtn);\n   }\n\n   //przycisk do nastepnej strony '>'\n   if (currentPage < totalPages) {\n    const nextBtn = document.createElement('button');\n    nextBtn.textContent = '>';\n\n    nextBtn.addEventListener('click', () => {\n        currentPage++;\n\n        if (keyWord) {\n            searchMovies(keyWord, currentPage)\n        } else {\n            popularMovies(currentPage);\n        }\n        renderBtn();\n    });\n    paginationBtn.appendChild(nextBtn);\n}\n}\n\n//funkcja do pobierania popularnych filmów, jest wyświetlana po załadowaniu strony\nasync function popularMovies(page = 1, selectedCountry = '', selectedYear = '') {\n    const regionParams = selectedCountry ? `&region=${selectedCountry}` : '';\n    const yearParams = selectedYear ? `&primary_release_year=${selectedYear}` : '';\n    const apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${apikey}&language=en-US&include_adult=false&page=${page}${regionParams}${yearParams}`;\n\n    try {\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n            throw new Error('response was not ok')\n        }\n        const data = await response.json();\n\n        gallery.innerHTML = '';\n\n        if (data.results.length > 0) {\n            for (const movie of data.results) {\n                const movieEl = document.createElement('div');\n                movieEl.className = 'movie';\n\n                const imgEl = document.createElement('img');\n                imgEl.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`; \n                \n                const titleEl = document.createElement('p')\n                titleEl.textContent = movie.title\n                titleEl.className = 'movie-title';\n\n                movieEl.appendChild(imgEl);\n                gallery.appendChild(movieEl);\n                movieEl.appendChild(titleEl);\n            }\n        } else {\n                gallery.textContent =  'OOPS...We are very sorry! You dont have any results matching your search.';\n        }\n\n        totalPages = data.total_pages;\n        renderBtn();\n        } catch (error) {\n                console.error('error fetching movies:', error);\n        }\n            }\n\n//funkcja co wyszukuje wszystkie filmy po wpisaniu keyword'a\nasync function searchMovies(keyWord, page = 1) {\n    const yearParams = selectedYear ? `&primary_release_year=${selectedYear}` : '';\n    const regionParams = selectedCountry ? `&region=${selectedCountry}` : '';\n    const apiURL = `https://api.themoviedb.org/3/search/movie?query=${keyWord}&api_key=${apikey}&language=en-US&include_adult=false&page=${page}${regionParams}${yearParams}`;\n\n    console.log(apiURL); \n\ntry {\n    const response = await fetch(apiURL);\n    if (!response.ok) {\n        throw new Error('response was not ok')\n    }\n    const data = await response.json();\n\n    gallery.innerHTML = '';\n\nif (data.results.length > 0) {\n    for (const movie of data.results) {\n        const movieEl = document.createElement('div');\n        movieEl.className = 'movie';\n\n\n     // pobrane obrazy dla danego filmu\n     const imageResponse = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}/images?api_key=${apikey}`);\n     const imageData = await imageResponse.json();\n\n     // sprawdzanie czy są dostępne postery\n     if (imageData.posters.length > 0) {\n         const imgEl = document.createElement('img');\n         imgEl.src = `https://image.tmdb.org/t/p/w500${imageData.posters[0].file_path}`; \n         movieEl.appendChild(imgEl);\n     }\n        //tytuł filmu\n        const titleEl = document.createElement('p')\n        titleEl.textContent = movie.title\n        titleEl.className = 'movie-title';\n\n        gallery.appendChild(movieEl);\n        movieEl.appendChild(titleEl);\n    }\n} else {\n        gallery.textContent =  'OOPS...We are very sorry! You dont have any results matching your search.';\n}\n\ntotalPages = data.total_pages;\nrenderBtn();\n} catch (error) {\n        console.error('error fetching movies:', error);\n}\n}\n\n\n//wyszukiwanie przycisku\ndocument.getElementById('searchButton').addEventListener('click', function(event) {\n    event.preventDefault();\n\n    //wartość inputa\n     keyWord = document.getElementById('searchInput').value;\n     selectedYear = document.getElementById('yearSelect').value;\n     selectedCountry = document.getElementById('countrySelect').value;\n\n    if (keyWord === \"\") {\n        return;\n    }\n\n    //wywołanie searchMovies\n    currentPage = 1;\n    searchMovies(keyWord);\n\n});\n\n//wywołanie popularMovies po załadowaniu strony\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    populateYears();\n    selector();\n    popularMovies(currentPage);\n});\n"],"names":["$9f350005b1f9b186$var$gallery","document","querySelector","$9f350005b1f9b186$var$currentPage","$9f350005b1f9b186$var$totalPages","$9f350005b1f9b186$var$keyWord","$9f350005b1f9b186$var$selectedCountry","$9f350005b1f9b186$var$selectedYear","async","$9f350005b1f9b186$var$renderBtn","paginationBtn","getElementById","innerHTML","prevBtn","createElement","textContent","addEventListener","$9f350005b1f9b186$var$searchMovies","$9f350005b1f9b186$var$popularMovies","appendChild","i","Math","min","btn","dots","lastBtn","nextBtn","page","selectedCountry1","selectedYear1","apiUrl","response","fetch","ok","Error","data","json","results","length","movie","movieEl","className","imgEl","src","poster_path","titleEl","title","total_pages","error","console","keyWord1","apiURL","log","imageResponse","id","imageData","posters","file_path","event","preventDefault","value","yearSelect","year","Date","getFullYear","option","$9f350005b1f9b186$var$populateYears","countrySelect","countries","country","cca2","name","common","$9f350005b1f9b186$var$selector"],"version":3,"file":"catalog.5e7cb921.js.map"}